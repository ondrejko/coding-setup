/* ============================================================================
   MAIN STYLES
   ========================================================================= */
/**
 *
 * Main styles. 
 *
 * The structure is based on ITCSS and modified: * https: //www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/
*/
/* 01 - Settings
   * Design tokens for UI
   * Variables, Config
*/
/*------------------------------------*\
  #BREAKPOINTS
\*------------------------------------*/
/* 02 - Design Tokens
 * Visual vocabulary of the site
*/
/*------------------------------------*\
  #COLOR PALLETE AND COLORS
\*------------------------------------*/
/* || Base colors */
/* || Brand colors */
/*------------------------------------*\
  #FONTS
\*------------------------------------*/
/*------------------------------------*\
  #SPACING
\*------------------------------------*/
/*------------------------------------*\
  #TYPOGRAPHY SETTINGS
\*------------------------------------*/
/* || Typography scale */
/* 03 - Tools
 * Globally used functions and mixins.
*/
/* Breakpoints generator
==============================
*/
/* Clearfix, if need
==============================
*/
/* The very latest clearfix needed: http://cssmojo.com/the-very-latest-clearfix-reloaded/ */
.clearfix:after {
  content: " ";
  display: block;
  clear: both; }

/* for supporting browsers, this is the standard way to clear floats in an element */
/* Some good discussion here: https://rachelandrew.co.uk/archives/2017/01/24/the-end-of-the-clearfix-hack/ (see comments) */
.clearfix {
  display: flow-root; }

/* 04 - Vendors (Generic)
 * 3rd party vendors including Normalize, Reset, *
 * This is the first layer which generates actual CSS.
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* 05 - Elements
 * Styling for bare HTML elements, e.g., H1, a, etc.
 * These come with default styling from the browser so we can redefine them here.
*/
/* RAW HTML Elements
==============================
*/
/* || General styles */
@-ms-viewport {
  width: device-width; }
body {
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -ms-overflow-style: scrollbar; }

html {
  box-sizing: border-box; }

*,
*::before,
*::after {
  box-sizing: inherit; }

::-moz-selection {
  color: white;
  background: black; }

::selection {
  color: white;
  background: black; }

img {
  max-width: 100%;
  height: auto; }

input[type='number'] {
  -moz-appearance: textfield; }

input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
  -webkit-appearance: none; }

/* 06 - Skeleton
 * Class-based selectors which define undecorated design patterns,
 * for example, grid layout, media object or container.
 * Cosemetic-free design patterns
 * namespace: .s-
*/
/* Grid settings and behaviour
==============================
*/
/* Web layouts
==============================
*/
/* 07 - Components
 * UI components
 * atoms (a-): the smallest building blocks of a website, can't contain any other component
 * molecules (m-): simple groups of UI elements functioning together as a unit
 * organisms (o-): complex UI components composed of groups of molecules and/or atoms and/or other organisms
*/
/* Component structure
==============================
  Atom
*/
/* Component structure
==============================
  Molecule
 */
/* Component structure
==============================
  Organism
 */
/* 08 - Utilities
 * Ability to override anything.
 * It will most likely come with !important as we are sure to use them.
*/
/* Global utilities
==============================
*/
/**
 * Completely hide content from view and from screenreaders.
 */
.u-hide {
  display: none !important; }

/**
 * Hide content from view, but leave it accessible to screenreaders.
 *
 * http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 */
.u-hide-visually {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  overflow: hidden !important;
  clip: rect(1px, 1px, 1px, 1px) !important; }
