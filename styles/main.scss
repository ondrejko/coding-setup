@charset "UTF-8";

/* ============================================================================
   MAIN STYLES
   ========================================================================= */

/**
 *
 * Main styles. 
 *
 * The structure is based on ITCSS and modified: * https: //www.xfive.co/blog/itcss-scalable-maintainable-css-architecture/
*/


/* 01 - Settings
   * Design tokens for UI
   * Variables, config
*/
@import "01-settings/foundations";


/* 02 - Tools
 * Globally used functions, placeholders and mixins.
*/
@import "02-tools/grid-settings";
@import "02-tools/grid-functions";
@import "02-tools/utilities-settings";


/* 03 - Generic (Vendors)
 * 3rd party vendors including Normalize, Reset, *
 * This is the first layer which generates actual CSS.
*/
@import "03-generic/reset";
@import "03-generic/normalize";


/* 04 - Elements
 * Styling for bare HTML elements, e.g., H1, a, etc.
 * These come with default styling from the browser so we can redefine them here.
*/
@import "04-elements/base";
@import "04-elements/typography";


/* 05 - Objects
 * Class-based selectors which define undecorated design patterns,
 * for example, grid layout, media object or container.
 * Cosemetic-free design patterns
 * namespace: .l-
*/
@import "05-layouts/global-layout";
@import "05-layouts/block-layout";


/* 06 - Components
 * UI components
 * namespace: .c-
*/
@import "06-components/Button";
@import "06-components/Input";

/* 07 - Patterns
 * More components together, that we can call pattern
 * namespace: .p-
*/
@import "07-patterns/Footer";
@import "07-patterns/Header";


/* 08 - Utilities
 * Ability to override anything.
 * It will most likely come with !important as we are sure to use them.
*/
@import "08-utilities/display";
@import "08-utilities/flex";
@import "08-utilities/sizing";
@import "08-utilities/spacing";
